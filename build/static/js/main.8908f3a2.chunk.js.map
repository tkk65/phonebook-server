{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","handleFormSubmit","value","name","onChange","handleNameChange","number","handleNumberChange","type","Filter","filter","handleFilterChange","Persons","persons","handleDeletion","map","person","onClick","Notification","notification","className","mode","message","baseUrl","service","getAll","axios","get","then","response","data","create","post","update","id","put","remove","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setNotification","useEffect","personService","showNotification","setTimeout","personsToShow","toLowerCase","includes","event","target","preventDefault","existingPerson","find","window","confirm","changedPerson","returnedPerson","catch","error","newPerson","concat","unwantedPerson","_","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8908f3a2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleFormSubmit}>\r\n      <div>\r\n        name: <input value={props.name} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.number} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={props.filter} onChange={props.handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Persons = ({ persons, handleDeletion }) => {\r\n  return (\r\n    <>\r\n      {persons.map(person =>\r\n        <p key={person.name}>\r\n          {person.name} {person.number}\r\n          <button onClick={() => handleDeletion(person)}>delete</button>\r\n        </p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  const className = (notification.mode === 'error') ? 'error-notification' : 'notification'\r\n\r\n  return (\r\n    <div className={className}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (person) => {\r\n  const request = axios.post(baseUrl, person)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, person) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, person)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst service = { getAll, create, update, remove }\r\nexport default service\r\n","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(persons => setPersons(persons))\n  }, [])\n\n  const showNotification = (message) => {\n    const newNotification = { message, mode: 'normal' }\n    setNotification(newNotification)\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const showErrorNotification = (message) => {\n    const newNotification = { message, mode: 'error' }\n    setNotification(newNotification)\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setFilter(event.target.value)\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault()\n\n    const existingPerson = persons.find(person => person.name === newName)\n    if (existingPerson) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const changedPerson = { ...existingPerson, number: newNumber }\n        personService\n          .update(existingPerson.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== existingPerson.id ? person : returnedPerson))\n            showNotification(`Changed ${returnedPerson.name}`)\n          })\n          .catch(error => {\n            setPersons(persons.filter(person => person.id !== existingPerson.id))\n            showErrorNotification(`${changedPerson.name} was already deleted from server`)\n          })\n      }\n    } else {\n      const newPerson = { name: newName, number: newNumber }\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          showNotification(`Added ${returnedPerson.name}`)\n        })\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleDeletion = (unwantedPerson) => {\n    if (window.confirm(`Delete ${unwantedPerson.name}?`)) {\n      personService\n        .remove(unwantedPerson.id)\n        .then(_ => {\n          setPersons(persons.filter(person => person.id !== unwantedPerson.id))\n          showNotification(`Deleted ${unwantedPerson.name}`)\n        })\n    }\n  }\n\n  const personsToShow = (filter === '')\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notification} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        handleFormSubmit={handleFormSubmit}\n        name={newName}\n        handleNameChange={handleNameChange}\n        number={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} handleDeletion={handleDeletion} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}