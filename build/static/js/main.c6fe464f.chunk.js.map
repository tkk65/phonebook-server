{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","handleFormSubmit","value","name","onChange","handleNameChange","number","handleNumberChange","type","Filter","filter","handleFilterChange","Persons","persons","handleDeletion","map","person","onClick","Notification","notification","className","mode","message","baseUrl","service","getAll","axios","get","then","response","data","create","post","update","id","put","remove","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setNotification","useEffect","personService","showNotification","setTimeout","showErrorNotification","personsToShow","toLowerCase","includes","event","target","preventDefault","existingPerson","find","window","confirm","changedPerson","returnedPerson","catch","error","newPerson","concat","unwantedPerson","_","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6fe464f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleFormSubmit}>\r\n      <div>\r\n        name: <input value={props.name} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.number} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={props.filter} onChange={props.handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Persons = ({ persons, handleDeletion }) => {\r\n  return (\r\n    <>\r\n      {persons.map(person =>\r\n        <p key={person.name}>\r\n          {person.name} {person.number}\r\n          <button onClick={() => handleDeletion(person)}>delete</button>\r\n        </p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  const className = (notification.mode === 'error') ? 'error-notification' : 'notification'\r\n\r\n  return (\r\n    <div className={className}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (person) => {\r\n  const request = axios.post(baseUrl, person)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, person) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, person)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst service = { getAll, create, update, remove }\r\nexport default service\r\n","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(persons => setPersons(persons))\n  }, [])\n\n  const showNotification = (message) => {\n    const newNotification = { message, mode: 'normal' }\n    setNotification(newNotification)\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const showErrorNotification = (message) => {\n    const newNotification = { message, mode: 'error' }\n    setNotification(newNotification)\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setFilter(event.target.value)\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault()\n\n    const existingPerson = persons.find(person => person.name === newName)\n    if (existingPerson) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const changedPerson = { ...existingPerson, number: newNumber }\n        personService\n          .update(existingPerson.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== existingPerson.id ? person : returnedPerson))\n            showNotification(`Changed ${returnedPerson.name}`)\n          })\n          .catch(error => {\n            setPersons(persons.filter(person => person.id !== existingPerson.id))\n            showErrorNotification(`${changedPerson.name} was already deleted from server`)\n          })\n      }\n    } else {\n      const newPerson = { name: newName, number: newNumber }\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          showNotification(`Added ${returnedPerson.name}`)\n        })\n        .catch(error => {\n          showErrorNotification(error.response.data.error)\n        })\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleDeletion = (unwantedPerson) => {\n    if (window.confirm(`Delete ${unwantedPerson.name}?`)) {\n      personService\n        .remove(unwantedPerson.id)\n        .then(_ => {\n          setPersons(persons.filter(person => person.id !== unwantedPerson.id))\n          showNotification(`Deleted ${unwantedPerson.name}`)\n        })\n    }\n  }\n\n  const personsToShow = (filter === '')\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notification} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        handleFormSubmit={handleFormSubmit}\n        name={newName}\n        handleNameChange={handleNameChange}\n        number={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} handleDeletion={handleDeletion} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}